!function(){"use strict";class e{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._targetNode=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._targetNode.append(this._renderer(e))}))}addItem(e){this._targetNode.prepend(this._renderer(e))}}var t=class{constructor(e,t,s,i,n){this.name=e.name,this.link=e.link,this._id=e._id,this.isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteButton=i,this._handleLikeButton=n}_getTemplate(){return document.querySelector("#card-template").content.firstElementChild.cloneNode(!0)}generateCard(){return this._element=this._getTemplate(),this._setEventListeners(),this._setLikeIconState(),this._element.querySelector(".card__title-text").textContent=this.name,this._cardImageElement.src=this.link,this._cardImageElement.alt=this.name,this._element}_setEventListeners(){this._cardLikeButton=this._element.querySelector(".card__fav-icon"),this._cardDeleteButton=this._element.querySelector(".card__trash-icon"),this._cardImageElement=this._element.querySelector(".card__image"),this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeButton(this),this._toggleLikeIcon()})),this._cardDeleteButton.addEventListener("click",(()=>{this._handleDeleteButton(this)})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick(this)}))}_setLikeIconState(){this.isLiked?this._cardLikeButton.classList.add("card__fav-icon_active"):this._cardLikeButton.classList.remove("card__fav-icon_active")}_toggleLikeIcon(){this._cardLikeButton.classList.toggle("card__fav-icon_active")}handleDeleteConfirm(){this._element.remove(),this._element=null}},s=class{constructor(e,t){this._config=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}_showInputError(e,t){const s=this._formElement.querySelector(`.${e.id}-error-message`);e.classList.add(this._config.inputErrorClass),s.classList.add(this._config.errorClass),s.textContent=t}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error-message`);t&&(e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass))}_checkValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}disableButton(){this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.setAttribute("disabled","")}_enableButton(){this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.removeAttribute("disabled")}_handleInput(e){this._toggleButtonState(),this._checkValidity(e)}_setEventListeners(){this.disableButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._handleInput.bind(this)(e)}))}))}enableValidation(){this._setEventListeners()}resetValidation(){this.disableButton(),this._inputList.forEach((e=>{this._hideInputError(e)}))}};class i{constructor(e){let{popupSelector:t}=e;this._popup=document.querySelector(t),this._modalIsOpenedClassName="modal_opened",this._escPressed=!1,this._listenerSet=!1,this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add(this._modalIsOpenedClassName),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove(this._modalIsOpenedClassName),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._closeModalWindowBtn=this._popup.querySelector(".modal__close-btn"),this._closeModalWindowBtn.addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("click",(e=>{const t=this.close.bind(this);e.target.classList.contains("modal")&&t()}))}_handleEscClose(e){"Escape"===e.key&&this.close()}}var n=class extends i{constructor(e,t,s,i){super({popupSelector:e}),this._form=document.forms[t],this._handleFormSubmit=s,this._inputList=this._form.querySelectorAll("input"),this._submitBtn=this._form.querySelector(".form__submit"),this._submitText=i,this._setButtonText()}_getInputValues(){return this._inputValues={},this._inputList.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}_setButtonText(){this._submitBtn.textContent=this._submitText}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}resetForm(){this._form.reset()}savingDisplay(e){!0===e?this._submitBtn.textContent="Saving...":this._setButtonText()}};class r{constructor(e,t,s){this._name=document.querySelector(e),this._about=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._about.textContent=s}setAvatar(e){let{avatar:t}=e;this._avatar.src=t}}const o=document.querySelector(".explorer__edit-button"),a=document.querySelector(".explorer__add-button"),c=document.querySelector(".explorer__photo-overlay"),l={};var h;h={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error-message_active"},Array.from(document.querySelectorAll(h.formSelector)).forEach((e=>{const t=new s(h,e),i=e.getAttribute("name");l[i]=t,t.enableValidation()}));const d=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:"9e620f98-b2bc-4f4a-81bd-341fb1cf797f","Content-Type":"application/json"}}).then(this.checkResponse).then((e=>e)).catch((e=>{console.error(e)}))}patchUserInfo(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:{authorization:"9e620f98-b2bc-4f4a-81bd-341fb1cf797f","Content-Type":"application/json"},body:JSON.stringify({name:t,about:s})}).then(this.checkResponse).catch((e=>{console.error(e)}))}patchAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:{authorization:"9e620f98-b2bc-4f4a-81bd-341fb1cf797f","Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then(this.checkResponse).catch((e=>{console.error(e)}))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:"9e620f98-b2bc-4f4a-81bd-341fb1cf797f","Content-Type":"application/json"}}).then(this.checkResponse).then((e=>e)).catch((e=>{console.error(e)}))}postCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{authorization:"9e620f98-b2bc-4f4a-81bd-341fb1cf797f","Content-Type":"application/json"},body:JSON.stringify({name:t,link:s})}).then(this.checkResponse).catch((e=>{console.error(e)}))}deleteCard(e){fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:{authorization:"9e620f98-b2bc-4f4a-81bd-341fb1cf797f"}}).then(this.checkResponse).catch((e=>{console.error(e)}))}setLike(e){fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:{authorization:"9e620f98-b2bc-4f4a-81bd-341fb1cf797f"},body:JSON.stringify({isLiked:!0})}).then(this.checkResponse).catch((e=>{console.error(e)}))}removeLike(e){fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:{authorization:"9e620f98-b2bc-4f4a-81bd-341fb1cf797f"}}).then(this.checkResponse).catch((e=>{console.error(e)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9e620f98-b2bc-4f4a-81bd-341fb1cf797f"}});d.getUserInfo().then((e=>{const t=new r(".explorer__name",".explorer__description",".explorer__photo");return t.setUserInfo({name:e.name,about:e.about}),t.setAvatar({avatar:e.avatar}),t})).then((e=>{const t=new n(".modal_type_profile","profile-form",(function(s){t.savingDisplay(!0),e.setUserInfo(s),d.patchUserInfo(s).then((()=>{t.close(),t.savingDisplay(!1)}))}),"Save");t.setEventListeners(),o.addEventListener("click",(()=>{l["profile-form"].resetValidation();const s=e.getUserInfo();t.setInputValues(s),t.open()}));const s=new n(".modal_type_avatar","avatar-form",(function(t){s.savingDisplay(!0),e.setAvatar(t),d.patchAvatar(t).then((()=>{s.resetForm(),s.close(),s.savingDisplay(!1),l["avatar-form"].disableButton()}))}),"Save");s.setEventListeners(),c.addEventListener("click",(()=>{s.open()}))})).catch((e=>console.error(e)));const _=e=>{f.open(e)},u=e=>{!1===e.isLiked?d.setLike(e._id):d.removeLike(e._id),e.isLiked=!e.isLiked};d.getInitialCards().then((s=>{const i=new e({items:s,renderer:e=>new t(e,".card",p,_,u).generateCard()},".cards__list");return i.renderItems(),i})).then((e=>{const t=new n(".modal_type_add-card","card-form",(s=>{t.savingDisplay(!0),e.addItem(s),d.postCard(s).then((()=>{t.resetForm(),t.close(),t.savingDisplay(!1),l["card-form"].disableButton()}))}),"Create");t.setEventListeners(),a.addEventListener("click",(()=>{t.open()}))})).catch((e=>console.error(e)));const m=new class extends i{constructor(e){super({popupSelector:e}),this._image=this._popup.querySelector(".modal__image"),this._imageLable=this._popup.querySelector(".modal__image-lable")}open(e,t){this._image.src=e,this._image.alt=t,this._imageLable.textContent=t,super.open()}}(".modal_type_show-image"),p=e=>{m.open(e.link,e.name)};m.setEventListeners();const f=new class extends i{constructor(e,t){super({popupSelector:e}),this._btn=this._popup.querySelector(".modal__confirm-btn"),this._handleConfirm=t}open(e){this._target=e,super.open()}setEventListeners(){super.setEventListeners(),this._btn.addEventListener("click",(()=>{this._handleConfirm(this._target)}))}}(".modal_type_confirm",(e=>{e.handleDeleteConfirm(),f.close(),d.deleteCard(e._id)}));f.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,